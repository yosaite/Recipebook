@model RecipeVM
@using System.Linq;
@using Recipebook.ViewModel

@{
    ViewData["Title"] = @Model.Name;
}

<div class="receipe-post-area section-padding-80">
    <div class="btn-group-fab" role="group" aria-label="FAB Menu">
        <div>
            <button type="button" class="btn btn-main btn-primary has-tooltip" data-toggle="tooltip" data-placement="left" title="Menu"><i class="fa fa-bars"></i></button>
            <a asp-controller="Recipe" asp-action="Delete" asp-route-recipeId="@Model.Id" type="button" class="btn btn-sub btn-danger has-tooltip" data-toggle="tooltip" data-placement="left" title="Usuń przepis"><i class="fa-solid fa-xmark"></i></a>
            <a asp-controller="Recipe" asp-action="Edit" asp-route-recipeId="@Model.Id" type="button" class="btn btn-sub btn-info has-tooltip" data-toggle="tooltip" data-placement="left" title="Edytuj przepis"><i class="fa-solid fa-pen-to-square"></i></a>
        </div>
    </div>
   
    <!-- Receipe Slider -->
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
                    <div class="carousel-inner">
                        @if (@Model.Images.Count != 0)
                        {
                            var first = true;

                            @foreach (var img in @Model.Images)
                            {

                                <div class="carousel-item @(first ? Html.Raw("active") : Html.Raw(""))">
                                    <img class="d-block w-100 rec" src=@($"/images/{@img.Path}") alt="">
                                </div>
                                first = false;
                            }
                        }
                        <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
                            <span><i class="fas fa-2x fa-chevron-left"></i></span>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
                            <span><i class="fas fa-2x fa-chevron-right"></i></span>
                            <span class="sr-only">Next</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Receipe Content Area -->
        <div class="receipe-content-area">
            <div class="container">
                <div class="row">
                    <div class="col-12 col-md-8">
                        <div class="receipe-headline my-5">
                            @if (@Model.ApplicationUser == null)
                            {
                                <small class="text-muted">Dodano: @Model.Created.ToString("dd MMMM yyyy") przez </small><br/>
                                <small class="text-muted">Przez: Użytkownik nie istnieje</small>
                            }
                            else
                            {
                                <small class="text-muted">Dodano: @Model.Created.ToString("dd MMMM yyyy")</small><br/>
                                <small class="text-muted">Przez: @Model.ApplicationUser.UserName</small>
                            }
                            <h2 class="mt-2 mb-4">@Model.Name</h2>
                            <div class="l-bor">
                                <h6>Czas przygotowania: @Model.PreparationTime minut</h6>
                                <h6>Porcje: @Model.Yields</h6>
                            </div>
                        </div>
                    </div>

                    <!--Rating -->
                    <div class="col-12 col-md-4">
                        <div class="text-right my-5">
                            <span class="text-muted">Ocena: <span id="recipe-rate">@Model.Rate/5</span></span>
                            @if (User.Identity is {IsAuthenticated: true })
                            {
                                <input id="rate-id" type="text" class="rating" hidden>
                            }
                        </div>
                    </div>
                </div>

                <!--Description -->
                <div class="row">
                    <div class="col-12 col-lg-12 mb-5">
                        @Model.Description
                    </div>

                    <!--Directions -->
                    <div class="col-12 col-lg-8">
                        <div class="single-preparation-step">
                            <h4>Sposób przygotowania</h4>
                            <br/>
                            @foreach (var (item,index) in Model.Directions.Split("\r\n\r\n").Select((value, i) => (value, i)))
                            {
                                <div class="row">
                                    <h2 class="col-1">@(index + 1)</h2>
                                    <div class="col">
                                        <p>@item</p>
                                    </div>
                                </div>
                                <hr/>
                            }
                        </div>
                    </div>

                    <!-- Ingredients -->
                    <div class="col-12 col-lg-4 l-bor-2 pl-4">
                        <div class="ingredients">
                            <h4>Składniki</h4>
                            @foreach (var item in Model.Ingredients.Select((value, index) => (value,index)))
                            {
                                <div class="custom-control custom-checkbox spac">
                                    <input type="checkbox" class="custom-control-input" id=@(item.index.ToString())>
                                    <label class="custom-control-label" for=@(item.index.ToString())>@item.value</label>
                                </div>
                            }
                        </div>
                    </div>
                    <form id="comment" novalidate class="needs-validation">
                        <div class="form-group">
                            <label for="comment-content"></label>
                            <textarea id="comment-content" class="form-control"></textarea>
                            <button class="btn btn-primary btn-lg btn-block" onclick="submitComment()">Dodaj przepis</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
    
        $(function() {
          $('.btn-group-fab').on('click', '.btn', function() {
            $('.btn-group-fab').toggleClass('active');
          });
          $('has-tooltip').tooltip();
        });
        
        $(function () {
          $('[data-toggle="tooltip"]').tooltip()
        })
        
        $('#rate-id').rating({
            'showCaption': false,
            'size': 'sm',
            'showClear': false,
            'step': 1
        }).on('rating:change', function (event, value, caption){
            $('#recipe-rate').html('<div class="spinner-border spinner-border-sm" role="status"><span class="sr-only">Loading...</span></div>') 
            $.ajax({
                url: '/recipe/rate',
                type: 'POST',
                data:{
                  recipeId: @Model.Id,
                  rate: value  
                },
                success: UpdateRate,
                error: UpdateRate
            });
         
        }).rating('update',@Html.Raw(@Model.UserRate));
        function UpdateRate(){
            $.ajax({
                url: '/recipe/getRate',
                type: 'GET',
                data:{
                  recipeId: @Model.Id
                },
                success: function(res) {
                    $('#recipe-rate').text(`${res}/5`)
                }
            })
        }
        
        function submitComment(){
            let data = $('#comment').serialize();
            console.log(data)
        }
    </script>
}

@section Styles{
    <style>
    .rec {
        height: 400px;
        width: 70%;
        object-fit: contain;
    }

    .lin {
        white-space: pre-line;
    }

    .l-bor {
        border-left: 3px solid gray;
        padding: 15px;
    }

    .l-bor-2 {
        border-left: 2px solid grey;
    }
    
    .fa-chevron-left {
        color: gray;
    }

    .fa-chevron-right {
        color: gray;
    }
    
    p
    {
        margin-bottom: 0 !important;
    }
    
    .spac
    {
        margin-bottom: 7px;
    }
    
    body { width: 100%; height: 100%; }
    .btn-group-fab {
      position: fixed;
      width: 50px;
      height: auto;
      right: 20px; bottom: 20px;
    }
    .btn-group-fab div {
      position: relative; width: 100%;
      height: auto;
    }
    .btn-group-fab .btn {
      position: absolute;
      bottom: 0;
      border-radius: 50%;
      display: block;
      margin-bottom: 4px;
      width: 40px; height: 40px;
      margin: 4px auto;
    }
    .btn-group-fab .btn-main {
      width: 50px; height: 50px;
      right: 50%; margin-right: -25px;
      z-index: 9;
    }
    .btn-group-fab .btn-sub {
      bottom: 0; z-index: 8;
      right: 50%;
      margin-right: -20px;
      -webkit-transition: all 2s;
      transition: all 0.5s;
    }
    .btn-group-fab.active .btn-sub:nth-child(2) {
      bottom: 60px;
    }
    .btn-group-fab.active .btn-sub:nth-child(3) {
      bottom: 110px;
    }
    .btn-group-fab.active .btn-sub:nth-child(4) {
      bottom: 160px;
    }
    .btn-group-fab .btn-sub:nth-child(5) {
      bottom: 210px;
    }
    
</style>
}